import fs from 'fs-extra';
import path from 'path';
import { fileURLToPath } from 'url';
import { execSync } from 'child_process';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

async function build() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
    const packageJsonPath = path.join(process.cwd(), 'package.json');
    if (!fs.existsSync(packageJsonPath)) {
      throw new Error('package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    console.log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...');
    execSync('npm install', { stdio: 'inherit' });

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dist –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const distPath = path.join(process.cwd(), 'dist');
    await fs.ensureDir(distPath);

    // –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
    console.log('üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...');
    const filesToCopy = [
      'src',
      'package.json',
      'package-lock.json',
      '.env'
    ];

    for (const file of filesToCopy) {
      const sourcePath = path.join(process.cwd(), file);
      const destPath = path.join(distPath, file);
      
      if (fs.existsSync(sourcePath)) {
        await fs.copy(sourcePath, destPath);
      }
    }

    // –°–æ–∑–¥–∞–µ–º Procfile –¥–ª—è Render
    const procfileContent = 'web: node src/bot.js';
    await fs.writeFile(path.join(distPath, 'Procfile'), procfileContent);

    // –°–æ–∑–¥–∞–µ–º .gitignore
    const gitignoreContent = `
node_modules/
.env
.DS_Store
    `.trim();
    await fs.writeFile(path.join(distPath, '.gitignore'), gitignoreContent);

    console.log('‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–µ–ø–ª–æ—é:');
    console.log('1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub');
    console.log('2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ git –≤ –ø–∞–ø–∫–µ dist:');
    console.log('   cd dist');
    console.log('   git init');
    console.log('   git add .');
    console.log('   git commit -m "Initial commit"');
    console.log('   git remote add origin <URL –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è>');
    console.log('   git push -u origin main');
    console.log('\n3. –ù–∞ Render:');
    console.log('   - –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service');
    console.log('   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
    console.log('   - –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log('     BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞');
    console.log('     WEBAPP_URL=https://–≤–∞—à-–¥–æ–º–µ–Ω.onrender.com (–¥–ª—è Web App)');
    console.log('     OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á_api (–¥–ª—è –ò–ò-–±–æ—Ç–∞)');
    console.log('\n4. –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ webhook:');
    console.log('   curl -F "url=https://–≤–∞—à-–¥–æ–º–µ–Ω.onrender.com/webhook" https://api.telegram.org/bot<BOT_TOKEN>/setWebhook');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:', error);
    process.exit(1);
  }
}

build(); 