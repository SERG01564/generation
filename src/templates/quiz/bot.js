import { Telegraf, session } from 'telegraf';
import dotenv from 'dotenv';

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot.use(session());

// –ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
const questions = [
    {
        question: '–°—Ç–æ–ª–∏—Ü–∞ –†–æ—Å—Å–∏–∏?',
        options: ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥'],
        correct: 0
    },
    {
        question: '–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Ä–µ–∫–∞ –≤ –º–∏—Ä–µ?',
        options: ['–ù–∏–ª', '–ê–º–∞–∑–æ–Ω–∫–∞', '–Ø–Ω—Ü–∑—ã', '–ú–∏—Å—Å–∏—Å–∏–ø–∏'],
        correct: 0
    },
    {
        question: '–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª "–í–æ–π–Ω—É –∏ –º–∏—Ä"?',
        options: ['–ü—É—à–∫–∏–Ω', '–¢–æ–ª—Å—Ç–æ–π', '–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π', '–ß–µ—Ö–æ–≤'],
        correct: 1
    }
];

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
    ctx.session = {
        currentQuestion: 0,
        score: 0,
        inQuiz: false
    };
    
    ctx.reply(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–≤–∏–∫—Ç–æ—Ä–∏–Ω—É! üéØ\n\n' +
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
        '/start - –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n' +
        '/quiz - –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n' +
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n' +
        '–ù–∞–∂–º–∏—Ç–µ /quiz —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!'
    );
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.help((ctx) => {
    ctx.reply(
        '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n' +
        '1. –ù–∞–∂–º–∏—Ç–µ /quiz —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n' +
        '2. –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–∏—Ä–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç\n' +
        '3. –í –∫–æ–Ω—Ü–µ –≤—ã —É–∑–Ω–∞–µ—Ç–µ —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n' +
        '–£–¥–∞—á–∏! üçÄ'
    );
});

// –ö–æ–º–∞–Ω–¥–∞ /quiz
bot.command('quiz', (ctx) => {
    ctx.session = {
        currentQuestion: 0,
        score: 0,
        inQuiz: true
    };
    sendQuestion(ctx);
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞
function sendQuestion(ctx) {
    const question = questions[ctx.session.currentQuestion];
    const keyboard = {
        inline_keyboard: question.options.map((option, index) => [{
            text: option,
            callback_data: `answer_${index}`
        }])
    };

    ctx.reply(
        `–í–æ–ø—Ä–æ—Å ${ctx.session.currentQuestion + 1} –∏–∑ ${questions.length}:\n\n` +
        question.question,
        { reply_markup: keyboard }
    );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
bot.action(/answer_(\d+)/, (ctx) => {
    if (!ctx.session.inQuiz) return;

    const answer = parseInt(ctx.match[1]);
    const question = questions[ctx.session.currentQuestion];

    if (answer === question.correct) {
        ctx.session.score++;
        ctx.reply('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!');
    } else {
        ctx.reply(`‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${question.options[question.correct]}`);
    }

    ctx.session.currentQuestion++;

    if (ctx.session.currentQuestion < questions.length) {
        setTimeout(() => sendQuestion(ctx), 1000);
    } else {
        const percentage = (ctx.session.score / questions.length) * 100;
        ctx.reply(
            `üéâ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n` +
            `–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${ctx.session.score} –∏–∑ ${questions.length}\n` +
            `–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${percentage}%\n\n` +
            `–ù–∞–∂–º–∏—Ç–µ /quiz —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!`
        );
        ctx.session.inQuiz = false;
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
    console.error('Bot error:', err);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => {
    console.log('Quiz Bot started successfully');
}).catch((err) => {
    console.error('Failed to start bot:', err);
});

// –í–∫–ª—é—á–∞–µ–º graceful shutdown
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM')); 